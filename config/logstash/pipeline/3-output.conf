output {

    # save all events to Elasticsearch with the uuid as the document id
    
    #########################
    # SEND TO ELASTICSEARCH #
    #########################

    # save Logspout messages to their own index...
    if [type] == "logspout" {
        elasticsearch {
            hosts => ["elasticsearch"]
            index => "logspout-%{+YYYY-MM-dd}"
            document_id => "%{@uuid}"
            sniffing => false
        }

    # to create separate indexes based on the value of some field,
    # replace 'somefield' with the name of your field...
    } else if [somefield] {
        elasticsearch {
            hosts => ["elasticsearch"]
            index => "%{[somefield]}-%{+YYYY-MM-dd}"
            document_id => "%{@uuid}"
            sniffing => false
        }

    # save everything else under a default index,
    # such as 'cyphon' or 'logstash'...
    } else {
        elasticsearch {
            hosts => ["elasticsearch"]
            index => "cyphon-%{+YYYY-MM-dd}"
            document_id => "%{@uuid}"
            sniffing => false
        }
    }


    ##################
    # SEND TO CYPHON #
    ##################

    # replace RabbitMQ 'user' and 'password' values as appropriate

    # send a subset of events to Cyphon Watchdogs
    if [type] in ["intel", "snort"] {
        rabbitmq {
            host => "rabbit"
            port => 5672
            exchange => "cyphon"
            exchange_type => "direct"
            key => "watchdogs"
            user => "guest"
            password => "guest"
            vhost => "cyphon"
            durable => true
            persistent => true
        }
    }

    ## send a subset of events to Cyphon LogChutes for parsing
    # if [type] == "syslog" {
    #     rabbitmq {
    #         host => "rabbit"
    #         port => 5672
    #         exchange => "cyphon"
    #         exchange_type => "direct"
    #         key => "logchutes"
    #         user => "guest"
    #         password => "guest"
    #         vhost => "cyphon"
    #         durable => true
    #         persistent => true
    #     }
    # }

    ## uncomment this if you also want to send messages to stdout
    # stdout {
    #     codec => rubydebug
    # }
}