filter {

    if [type] == "logspout" {

        # grok pattern for Logspout syslog messages
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{LOGSPOUT_MSG}" }
        }

        date {
            match => [ "ts", "ISO8601" ]
        }

        # if the message was parsed successfully...
        if !("_grokparsefailure" in [tags]) {

            mutate {

                # trim message and remove redundant fields
                replace => [ "@message", "%{msg}" ]
                remove_field => [ "message", "msg", "ts" ]

                # Remove redundant Logspout info from multiline logs.
                # Logstash will escape `\n` if you try to use it as a
                # replacement value, so use a group backreference (`\1`)
                # to preserve it instead. Use another backreference (`\2`)
                # to preserve the message following the Logspout info.
                gsub => [ "@message", "(\n)(?:<\d+>\d*) (?:\S+|-) (?:\S+|-) (?:\S+|-) (?:\S+|-) (?:\S+|-) (?:\S+|-) (.*)", "\1\2"]
            }
        }
    } 
}