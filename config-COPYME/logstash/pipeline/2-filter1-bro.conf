filter {

    # parse Bro logs received through Beats

    if [type] == "connlog" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{CONNLOG}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "dhcp" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{DHCP}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "dns" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{DNS}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "files" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{FILES}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "ftp" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{FTP}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "http" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{HTTP}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "intel" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{INTEL}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "notice" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{NOTICE}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "ssh" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{SSH}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "ssl" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{SSL}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    } else if [type] == "weirdlog" {
        grok {
            patterns_dir => ["/usr/share/logstash/patterns"]
            match => { "message" => "%{WEIRDLOG}" }
        }
        if !("_grokparsefailure" in [tags]) {
            mutate {
                remove_field => [ "message" ]
            }
        }
    }

    # add geoip
    if [id_orig_h] {
        geoip {
            source => "id_orig_h"
            target => "src_geoip"
        }
    }
    if [id_resp_h] {
        geoip {
            source => "id_resp_h"
            target => "dst_geoip"
        }
    }

    # parse timestamp and save in new field
    if [ts] {
        date {
            match => [ "ts", "UNIX" ]
            target => "sys_timestamp"
        }
        mutate {
            remove_field => [ "ts" ]
        }
    }
}